worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;
  tcp_nopush    on;
  keepalive_timeout 65;
  client_max_body_size 20m;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
  gzip_min_length 1024;

  upstream fe_upstream { server frontend:80; }
  upstream be_upstream { server backend:8000; }
  upstream auth_upstream { server keycloak:8080; }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;

    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    location /img/ {
      alias /var/www/img/;
      autoindex off;
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location /auth/ {
        proxy_pass http://auth_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /resources/ {
        proxy_pass http://auth_upstream/resources/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
      proxy_pass http://be_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Authorization $http_authorization;

      # Hardcode CORS để tránh lỗi biến env
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Credentials "true" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Authorization,Content-Type" always;

      if ($request_method = OPTIONS) { return 204; }
    }

    location / {
      proxy_pass http://fe_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_redirect off;
      error_page 404 /index.html;
    }

    location = /index.html {
      proxy_pass http://fe_upstream/index.html;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_redirect off;
    }
  }
}